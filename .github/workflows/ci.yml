name: ci

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        compiler:
          - llvm-14
          - gcc-11
        build_type:
          - Debug
          #- Release
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install python dependencies
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Install setup tools
      run: pip3 install wheel setuptools
      shell: bash

    - name: Install conan latest
      if: ${{ inputs.version == '' }}
      run: pip3 install conan --upgrade
      shell: bash

    - name: Create default profile
      run: conan profile new default --detect
      
    - name: Update profile
      if: ${{ runner.os  == 'Linux' }}
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install dependencies
      run: conan install . -s build_type=${{ matrix.build_type }} --install-folder=${{github.workspace}}/build --build missing

    - name: Install compiler
      id: install_cc
      uses: krogk/cpp-project-template/.github/workflows/compiler-setup.yml@develop
      with:
        compiler: ${{ matrix.compiler }}

    - name: Check compiler
      shell: bash
      env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
      run: |
        $CC --version
        $CXX --version

    - name: Build
      working-directory: ${{github.workspace}}
      # Build program with the given configuration
      run: .${{github.workspace}}/build.sh -d -v

    - name: Test
      working-directory: ${{github.workspace}}
      # Execute tests defined by the script
      run: .${{github.workspace}}/test.sh -a

  coverage: # For now testing on Linux+gcc+gcov TODO: Cross-platform
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install python dependencies
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Install setup tools
      run: pip3 install wheel setuptools
      shell: bash

    - name: Install conan latest
      if: ${{ inputs.version == '' }}
      run: pip3 install conan --upgrade
      shell: bash

    - name: Create default profile
      run: conan profile new default --detect
      
    - name: Update profile
      if: ${{ runner.os  == 'Linux' }}
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install dependencies
      run: conan install . -s build_type=Debug --install-folder=${{github.workspace}}/build --build missing

    - name: Install compiler
      id: install_cc
      uses: krogk/cpp-project-template/.github/actions/compiler-setup/compiler-setup.yml@develop
      with:
        compiler: ${{ matrix.compiler }}

    - name: Check compiler
      shell: bash
      env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
      run: |
        $CC --version
        $CXX --version

    - name: Build
      working-directory: ${{github.workspace}}
      # Build program with the given configuration
      run: .${{github.workspace}}/build.sh -d -c -v

    - name: Test
      working-directory: ${{github.workspace}}
      # Execute tests defined by the script
      run: .${{github.workspace}}/test.sh -c -a

    - name: Publish to codecov
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov